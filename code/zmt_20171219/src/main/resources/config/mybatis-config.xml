<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:task="http://www.springframework.org/schema/task"
	 
       
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/task  
       	  http://www.springframework.org/schema/task/spring-task-3.0.xsd
          http://www.springframework.org/schema/mvc   
          http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
          >
	
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
		<property name="url" value="${url}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
        <property name="maxActive" value="${maxActive}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="maxIdle" value="${maxIdle}"/>
        <property name="minIdle" value="${minIdle}"/>   
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name="connectionProperties" value="clientEncoding=UTF-8"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/> <!-- 打开检查,用异步线程evict进行检查 -->
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="validationQueryTimeout" value="${validationQueryTimeout}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
        <property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"/>
        <property name="logAbandoned" value="${logAbandoned}"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:com/jf/projects/zmt/mapper/*.xml" />
		<property name="typeAliasesPackage" value="com.jf.projects.zmt.model" />
	</bean>


	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.jf.projects.zmt.dao" />
		<property name="markerInterface" value="com.jf.projects.zmt.dao.BaseMapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

	</bean>
	
	

  
	<!-- 开启aop监听，即注解开启--> 
	<!-- <aop:aspectj-autoproxy expose-proxy="true" /> -->
	<!-- 配置声明式事务管理的 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.jf.projects.zmt.service..*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>	
			<tx:method name="bind*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>
			<tx:method name="handle*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="collect*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="put*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="mark*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>	
			<tx:method name="sold*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>		
			<tx:method name="confirm*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="evaluate*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>		
			<tx:method name="invite*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="agree*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="reply*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>	
			<tx:method name="accept*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>		
			<tx:method name="apply*" propagation="REQUIRED"  isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>	
			<tx:method name="insert*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>	
			<tx:method name="signIn*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>
			<tx:method name="thirdpartyLogin*" propagation="REQUIRED" isolation="READ_COMMITTED" rollback-for="java.lang.Exception"/>		
			<tx:method name="login*" propagation="REQUIRED"  rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>		
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>			
			<tx:method name="cancel*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="praise*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<!-- <tx:method name="*" propagation="REQUIRED" read-only="true" /> --> 
		</tx:attributes>
	</tx:advice>
	

</beans>