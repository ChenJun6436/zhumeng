<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jf.projects.zmt.dao.AndRoleResourceMapper">
  <resultMap id="BaseResultMap" type="com.jf.projects.zmt.model.AndRoleResource">
    <id column="Id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="resource_id" jdbcType="VARCHAR" property="resourceId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, role_id, resource_id, create_time, creator, update_time, type
  </sql>
  
  <!-- 根据角色ID获取资源数据 -->
  <select id="findResourceByRoleId" parameterType="java.lang.String" resultType="com.jf.projects.zmt.vo.resource.ResourceVo">
    select 
    t.resource_id as resourceId,m.name as resourceName,t.type,m.parent_id as parentId
    from and_role_resource t
    left join s_resource m on m.id  = t.resource_id
    where t.role_id = #{roleId}
  </select>
  
  <!-- 批量添加角色资源 -->
    <insert id="addRoleResourceBatch" >
        insert into and_role_resource (id,role_id,resource_id,type)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR},#{item.roleId,jdbcType=VARCHAR},
            #{item.resourceId,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER})
        </foreach>
    </insert>
  
  <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from and_role_resource
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <!-- 根据角色ID删除角色资源数据 -->
  <delete id="deleteByRoleId" parameterType="java.lang.String">
    delete from and_role_resource
    where role_id = #{roleId}
  </delete>
  <delete id="delete" parameterType="java.lang.String">
    delete from and_role_resource
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jf.projects.zmt.model.AndRoleResource">
    insert into and_role_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      Id,
      <if test="roleId != null">
        role_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.jf.projects.zmt.model.AndRoleResource">
    update and_role_resource
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="resourceId != null">
        resource_id = #{resourceId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
	<!--通过资源权限查找用户 -->
	<select id="findRoleVoByResource" parameterType="java.lang.String"
		resultType="com.jf.projects.zmt.vo.role.RoleVo">
		SELECT
		r.Id AS roleId,
		r.`name` AS roleName
		FROM
		s_role AS r
		LEFT JOIN s_department as sd ON sd.id=r.department_id
		WHERE
		sd.`code`=#{resource}
	</select>
</mapper>